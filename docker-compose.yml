version: "3.8"
services:
  nginx:
    build:
      context: .
      target: finalNginx
      args:
        API_URL: /
    networks:
      - reverse-proxy
      - back
    expose:
      - 80
    restart: always
    depends_on:
      node:
        condition: service_healthy
    environment:
      - VIRTUAL_HOST=${DOMAIN}
      - VIRTUAL_PORT=80
      - LETSENCRYPT_HOST=${DOMAIN}
      - LETSENCRYPT_EMAIL=test@test.ru

  node:
    build:
      context: .
      target: finalNode
    networks:
      back:
        aliases:
          - node
          - backend-node
    expose:
      - 3001
    restart: always
    environment:
      - APP_PORT=3001
      - DATABASE_URL=postgres://postgres:${PG_PASSWORD}@db:5432/coffee?runMigrate=true
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:3001/api || exit 1
      timeout: 3s
      interval: 3s
      retries: 10

  # Database
  db:
    image: postgres:16.1-alpine
    restart: always
    networks:
      - back
    volumes:
      # Volume for storing Postgres data (databases, tables, settings, etc.).
      - postgres:/var/lib/postgresql/data
      # Init script.
      - ./server/pg/10-init-user-db.sh:/docker-entrypoint-initdb.d/10-init-user-db.sh
    environment:
      POSTGRES_PASSWORD: ${PG_PASSWORD}


networks:
  reverse-proxy:
    external:
      name: reverse-proxy
  back:
    driver: bridge

volumes:
  postgres:
